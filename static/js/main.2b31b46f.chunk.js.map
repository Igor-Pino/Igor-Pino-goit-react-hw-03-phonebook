{"version":3,"sources":["components/ContactsList/ContactsList.module.scss","components/ContactFilter/ContactFilter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactInput/ContactInput.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","App.js","index.js","styles/base.module.scss"],"names":["module","exports","ContactInput","state","name","number","nameInputId","ShortId","generate","numberInputId","reset","setState","handelChange","e","currentTarget","value","handelSubmit","preventDefault","props","onSubmit","this","id","type","pattern","title","required","onChange","Component","console","log","ContactItem","onDeleteContact","className","s","contactItem","contact_name","contact_number","onClick","contact_btn","ContactsList","contacts","contact_list","map","contact","Filter","filter_label","App","filter","handlerContact","newContact","find","toLowerCase","alert","deleteContact","contactId","changeFilter","contactFilter","normalizedFilter","includes","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","filteredNumbers","main_container","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.2b31b46f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactsList_root__2hUaE\",\"main_container\":\"ContactsList_main_container__1TmC9\",\"title\":\"ContactsList_title__-rrdL\",\"contact_btn\":\"ContactsList_contact_btn__1cs-n\",\"contact_list\":\"ContactsList_contact_list__38zhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactFilter_root__xV_C2\",\"main_container\":\"ContactFilter_main_container__2Ravz\",\"title\":\"ContactFilter_title__2QImv\",\"contact_btn\":\"ContactFilter_contact_btn__3m7N0\",\"filter_label\":\"ContactFilter_filter_label__3Ze-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactItem_root__UJ7Hv\",\"main_container\":\"ContactItem_main_container__1xLM4\",\"title\":\"ContactItem_title__SXPce\",\"contact_btn\":\"ContactItem_contact_btn__16FYg\",\"contact\":\"ContactItem_contact__12MtO\",\"contact_number\":\"ContactItem_contact_number__Nsi9G\",\"contactItem\":\"ContactItem_contactItem__3F17M\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ShortId from 'shortid';\r\n\r\nclass ContactInput extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = ShortId.generate();\r\n  numberInputId = ShortId.generate();\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handelChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handelSubmit}>\r\n        <label id={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            id={this.nameInputId}\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <label id={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            id={this.numberInputId}\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactInput.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconsole.log();\r\nexport default ContactInput;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.scss';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n  <li className={s.contactItem}>\n    <div>\n      <span className={s.contact_name}>{name}</span>\n      <span className={s.contact_number}>{number}</span>\n    </div>\n    <button onClick={() => onDeleteContact(id)} className={s.contact_btn}>\n      X\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.scss';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contact_list}>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport s from './ContactFilter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <span className={s.filter_label}>Contact filter</span>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\r\nimport ContactInput from './components/ContactInput';\r\nimport ContactsList from './components/ContactsList/ContactsList';\r\nimport ShortId from 'shortid';\r\nimport Filter from './components/ContactFilter';\r\nimport s from './styles/base.module.scss';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  // перед рендером прорвнює попередній стейт із новим, якщо вони не ріні то записує все в local storage\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  // перед монтуванням впереше перевыряє local storage на наявнысть контактів, якщо вони є то додає їх в стейт.\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  handlerContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n\r\n    const newContact = {\r\n      id: ShortId.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    if (\r\n      contacts.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase()) ||\r\n      contacts.find(contact => contact.number === newContact.number)\r\n    ) {\r\n      alert(`${newContact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  contactFilter = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    const filteredNumbers = this.contactFilter();\r\n\r\n    return (\r\n      <div className={s.main_container}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n\r\n        <ContactInput onSubmit={this.handlerContact} />\r\n\r\n        <h2 className={s.title}>Contacts</h2>\r\n\r\n        <Filter onChange={this.changeFilter} value={filter} />\r\n\r\n        <ContactsList contacts={filteredNumbers} onDeleteContact={this.deleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"base_root__PANF6\",\"main_container\":\"base_main_container__2m-o_\",\"title\":\"base_title__1HIcq\",\"contact_btn\":\"base_contact_btn__3ywBy\"};"],"sourceRoot":""}